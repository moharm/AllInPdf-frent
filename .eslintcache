[{"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\App.js":"1","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\reportWebVitals.js":"2","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\index.js":"3","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Services\\ManagFile.js":"4","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Config\\axios.js":"5","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Header.js":"6","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Acceuil.js":"7","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Login.js":"8","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Drop.js":"9","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\styles\\Drop.js":"10"},{"size":948,"mtime":1616258555062,"results":"11","hashOfConfig":"12"},{"size":402,"mtime":1606843338747,"results":"13","hashOfConfig":"12"},{"size":556,"mtime":1612735884655,"results":"14","hashOfConfig":"12"},{"size":2351,"mtime":1612705712674,"results":"15","hashOfConfig":"12"},{"size":185,"mtime":1612260591111,"results":"16","hashOfConfig":"12"},{"size":886,"mtime":1616258555078,"results":"17","hashOfConfig":"12"},{"size":3002,"mtime":1616257552381,"results":"18","hashOfConfig":"12"},{"size":1077,"mtime":1614540200363,"results":"19","hashOfConfig":"12"},{"size":2882,"mtime":1616258669740,"results":"20","hashOfConfig":"12"},{"size":827,"mtime":1616258419469,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1llt2nc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\App.js",[],["46","47"],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\reportWebVitals.js",[],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\index.js",[],["48","49"],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Services\\ManagFile.js",[],["50","51"],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Config\\axios.js",[],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Header.js",[],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Acceuil.js",["52"],"import React, {useEffect, useState} from \"react\";\r\nimport * as ManagFile from \"../Services/ManagFile\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport FormFileInput from \"react-bootstrap/FormFileInput\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\n\r\n\r\nexport default function Acceuil() {\r\n    const [files, setFiles] = useState( [])\r\n    const [erreur, setErreur] = useState(null)\r\n    const [GenerateActivation, setGenerateActivation] = useState(true)\r\n\r\n    async function onUploadFile(event) {\r\n        const input = event.target\r\n        let name = input.files[0].name\r\n        let size = input.files[0].size\r\n        let file = input.files[0]\r\n        let result = await ManagFile.upload(name, size, file)\r\n        if( result.isErreur ){\r\n            setErreur(result.message)\r\n            input.value = null\r\n        }else{\r\n            setFiles(prevState => ([...prevState, result.data]))\r\n            setGenerateActivation(false)\r\n        }\r\n\r\n    }\r\n\r\n    async function onDeleteFile(code){\r\n        let result = await ManagFile.Delete(code)\r\n        if( result.isErreur ){\r\n            setErreur(result.message)\r\n\r\n        }else{\r\n            let filesUpdated = files.filter((file) => (file.key !== code))\r\n            setFiles(filesUpdated)\r\n        }\r\n\r\n    }\r\n\r\n    async function onGeneratePDF(){\r\n        let result = await ManagFile.generatePDF()\r\n        if( result.isErreur ){\r\n            setErreur(result.message)\r\n\r\n        }else{\r\n            setFiles([])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"App\">\r\n            <Container className=\"main\">\r\n                <Jumbotron>\r\n                    <h1 className=\"header\">Concat .png, .jpg, .jpeg, .pdf on One pdf file.</h1>\r\n                </Jumbotron>\r\n                <div className=\"w-100\">\r\n                    {erreur && <Alert variant='danger'>\r\n                        {erreur}\r\n                    </Alert>}\r\n                    <FormFileInput type=\"file\" name={\"file\"} onChange={event => onUploadFile(event)} className=\"mb-2\"/>\r\n                    <ListGroup variant=\"flush\">\r\n                        {files?.map(v => {\r\n                            return  <ListGroup.Item key={v.key} className=\"d-flex\">\r\n                                <div className=\"col-7\" id={v.key}>{v.name}</div>\r\n                                <Button className=\"col-2\" variant=\"danger\" id={v.key} onClick={() => onDeleteFile(v.key)}>Delete</Button>\r\n                            </ListGroup.Item>\r\n                        })}\r\n                    </ListGroup>\r\n                </div>\r\n                <div>\r\n                    <Button id=\"generateButton\" onClick={()=> onGeneratePDF()} disabled={GenerateActivation}>Generate</Button>\r\n                </div>\r\n            </Container>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n","C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Login.js",[],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\Components\\Drop.js",[],"C:\\desktop\\projects\\AlInPdf\\al_in_pdf frent\\src\\styles\\Drop.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"53","replacedBy":"59"},{"ruleId":"55","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],["65"],["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]